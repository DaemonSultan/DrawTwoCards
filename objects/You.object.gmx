<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>tempHeroS</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>Clickable</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>level = -1;

hp = -1;
maxHp = -1;
mp = -1;
maxMp = -1;
flips = -1;
maxFlips = -1;
actions = -1;
maxActions = -1;
atq = -1;
maxAtq = -1;


doing = NOTHING;
casting = noone;
armour = 0;
buff = 0;
disarmed = 0;
fatigue = 0;

targetArray = noone;
targetCount = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>switch(phase){
    case PL_UPKEEP:
        if (flips == 0){
            phase_end();
        }
    break;
    case PL_MAIN:
        if (doing == NOTHING){
            casting = noone;
        }
    break;
} 
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="54">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(doing == NOTHING){
    skip_phase();
}
else if(doing == ATTACK or doing == CAST or doing == ACTIVATE){
    cancel();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(phase != PL_MAIN) exit;
switch(doing){
    case NOTHING:
        doing = ATTACK;
    break;
    case ATTACK:
    case CAST:
        cancel();
    break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_halign(fa_center);
draw_set_valign(fa_middle);

var radius = string_width(atq);
var outCol = c_maroon, inCol = c_red;

if(doing == ATTACK){
    sprite_index = LoktarS;
    draw_set_color(outCol);
    draw_circle(bbox_left, bbox_top, radius, false);
    draw_set_color(inCol);
    draw_circle(bbox_left, bbox_top, radius-1, false);
    draw_set_color(c_black);
    draw_text(bbox_left, bbox_top, atq);
}else{
    sprite_index = tempHeroS;
}

draw_self();
draw_set_color(c_black);

var str = "";

if(casting != noone){
    str = string(targetCount) + "/" + string(casting.maxTargets);
    draw_set_color(c_black);
    draw_text(mouse_x, mouse_y, str);
    draw_text(mouse_x, mouse_y + 50, casting.name);
}
var hpText = "";
if(armour &gt; 0){
    hpText = "HP: " + string(hp) + "/" + string(maxHp) + " + " + string(armour);
}else{
    hpText = "HP: " + string(hp) + "/" + string(maxHp);
}
draw_text(x, bbox_bottom + 30, hpText);
draw_text(x, bbox_bottom + 60, "Actions left: " + string(actions));
draw_text(x, bbox_bottom + 90, "Mana: " + string(mp) + "/" + string(maxMp));
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
