<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>Clickable</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Whenever you cast a noncreature spell, you may have Riddleform become a 3/3 sphinx creature with flying in addition to its other types until end of turn. 2U : Scry 1.
status = INDECK;

gridx = -1;
gridy = -1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///When revealed
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var n = sqrt(dungeonSize);
draw_set_circle_precision(32);
var radius = string_width("2"); // imsi. as always..
draw_set_halign(fa_center);
draw_set_valign(fa_middle);

if(status == FACEDOWN or status ==  REVEALED){
    visible = true;
    x = BFIELD_LEFT + gridx * (BFIELD_WIDTH / n);
    y = BFIELD_RIGHT + gridy * (BFIELD_HEIGHT / n);
    
}else{
    visible = false;
    x = 0;
    y = 0;
}

switch(status){
    case FACEDOWN:
        draw_sprite(CardBackS, 0, x, y);
    break;
    case REVEALED:
        switch(type){
            case CREATURE:
                draw_sprite(sprite_index, 0, x,y);
                draw_set_color(c_red);
                draw_circle(bbox_left, bbox_top, radius, false);
                draw_circle(bbox_left, bbox_bottom, radius, false);
                draw_circle(bbox_right, bbox_bottom, radius, false);
                draw_set_color(c_orange);
                draw_circle(bbox_left, bbox_top, radius-1, false);
                draw_circle(bbox_left, bbox_bottom, radius-1, false);
                draw_circle(bbox_right, bbox_bottom, radius-1, false);
                draw_set_color(c_black);
                draw_text(bbox_left, bbox_top, level);
                draw_text(bbox_left, bbox_bottom, atq);
                draw_text(bbox_right, bbox_bottom, def);
            break;
            case TRAP:
                draw_sprite(sprite_index, 0, x,y);
                draw_set_color(c_red);
                draw_circle(bbox_left, bbox_top, radius, false);
                draw_set_color(c_orange);
                draw_circle(bbox_left, bbox_top, radius-1, false);
                draw_set_color(c_black);
                draw_text(bbox_left, bbox_top, level);
            break;
            case SKILL:
                draw_sprite(sprite_index, 0, x,y);
            break;
            case SPELL:
                draw_sprite(sprite_index, 0, x,y);
                var outCol, inCol;
                switch(color){
                    case STRENGTH:
                        outCol = c_maroon;
                        inCol = c_red;
                    break;
                    case AGILITY:
                        outCol = c_green;
                        inCol = c_lime;
                    break;
                    case INTELLIGENCE:
                        outCol = c_navy;
                        inCol = c_blue;
                    break;
                }
                draw_set_color(outCol);
                draw_circle(bbox_right, bbox_top, radius, false);
                draw_set_color(inCol);
                draw_circle(bbox_right, bbox_top, radius-1, false);
                draw_set_color(c_black);
                draw_text(bbox_right, bbox_top, cost);
            break;
            case NEUTRAL:
                draw_sprite(sprite_index, 0, x, y);
            break;
        }
    break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
